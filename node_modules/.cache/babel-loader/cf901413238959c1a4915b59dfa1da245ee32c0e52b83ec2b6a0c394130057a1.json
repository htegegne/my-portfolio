{"ast":null,"code":"var _jsxFileName = \"D:\\\\portfolio\\\\src\\\\components\\\\Projects.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Projects = () => {\n  const projects = [{\n    name: 'Portfolio Website',\n    description: 'Developed a personal portfolio website to showcase my skills, projects, and professional experience.',\n    technologies: ['React', 'HTML', 'CSS', 'Bootstrap'],\n    repoLink: 'https://github.com/htegegne/my-portfolio',\n    liveDemoLink: href = 'https://htegegne.github.io/my-portfolio/'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), projects.map((project, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: project.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: project.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Technologies used: \", project.technologies.join(\", \")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Repository: \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: project.repoLink,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"Portfolio GitHub Repository\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this), project.liveDemoLink && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Live Demo: \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: project.liveDemoLink,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: project.liveDemoLink\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 60\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 46\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Projects","projects","name","description","technologies","repoLink","liveDemoLink","href","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","project","index","join","target","rel","_c","$RefreshReg$"],"sources":["D:/portfolio/src/components/Projects.jsx"],"sourcesContent":["import React from 'react';\r\n\r\nconst Projects = () => {\r\n    const projects = [\r\n        {\r\n            name:  'Portfolio Website',\r\n            description:  'Developed a personal portfolio website to showcase my skills, projects, and professional experience.',\r\n            technologies: ['React', 'HTML', 'CSS', 'Bootstrap'],\r\n            repoLink: 'https://github.com/htegegne/my-portfolio',\r\n            liveDemoLink: href= 'https://htegegne.github.io/my-portfolio/'\r\n        }\r\n    ];\r\n\r\n    return (\r\n        <div className=\"section\">\r\n            <h2>Projects</h2>\r\n            {projects.map((project, index) => (\r\n                <div key={index}>\r\n                     <h3>{project.name}</h3>\r\n                    <p>{project.description}</p>\r\n                    <p>Technologies used: {project.technologies.join(\", \")}</p>\r\n                    <p>Repository: <a href={project.repoLink} target=\"_blank\" rel=\"noopener noreferrer\">Portfolio GitHub Repository</a></p>\r\n                    {project.liveDemoLink && <p>Live Demo: <a href={project.liveDemoLink} target=\"_blank\" rel=\"noopener noreferrer\">{project.liveDemoLink}</a></p>}\r\n                </div>\r\n\r\n            ))}         \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Projects;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACnB,MAAMC,QAAQ,GAAG,CACb;IACIC,IAAI,EAAG,mBAAmB;IAC1BC,WAAW,EAAG,sGAAsG;IACpHC,YAAY,EAAE,CAAC,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,WAAW,CAAC;IACnDC,QAAQ,EAAE,0CAA0C;IACpDC,YAAY,EAAEC,IAAI,GAAE;EACxB,CAAC,CACJ;EAED,oBACIR,OAAA;IAAKS,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACpBV,OAAA;MAAAU,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAChBZ,QAAQ,CAACa,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBACzBjB,OAAA;MAAAU,QAAA,gBACKV,OAAA;QAAAU,QAAA,EAAKM,OAAO,CAACb;MAAI;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACxBd,OAAA;QAAAU,QAAA,EAAIM,OAAO,CAACZ;MAAW;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5Bd,OAAA;QAAAU,QAAA,GAAG,qBAAmB,EAACM,OAAO,CAACX,YAAY,CAACa,IAAI,CAAC,IAAI,CAAC;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3Dd,OAAA;QAAAU,QAAA,GAAG,cAAY,eAAAV,OAAA;UAAGQ,IAAI,EAAEQ,OAAO,CAACV,QAAS;UAACa,MAAM,EAAC,QAAQ;UAACC,GAAG,EAAC,qBAAqB;UAAAV,QAAA,EAAC;QAA2B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,EACtHE,OAAO,CAACT,YAAY,iBAAIP,OAAA;QAAAU,QAAA,GAAG,aAAW,eAAAV,OAAA;UAAGQ,IAAI,EAAEQ,OAAO,CAACT,YAAa;UAACY,MAAM,EAAC,QAAQ;UAACC,GAAG,EAAC,qBAAqB;UAAAV,QAAA,EAAEM,OAAO,CAACT;QAAY;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA,GALxIG,KAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMV,CAER,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACO,EAAA,GA1BIpB,QAAQ;AA4Bd,eAAeA,QAAQ;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}